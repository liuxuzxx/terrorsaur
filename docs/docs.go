// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-10-09 14:39:56.596546 +0800 CST m=+0.079004501

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Terrorsaur-鸵鸟勇士",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "172.16.21.207:12309",
    "basePath": "/v1",
    "paths": {
        "/api/rattrap/ancient-article/article-type/types": {
            "get": {
                "description": "全部文章类型的数据信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "全部文章类型的数据"
            }
        },
        "/api/rattrap/ancient-article/article-type/{typeId}/information": {
            "get": {
                "description": "根据文章的类型ID(typeId),获取文章类型的详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "根据类型ID获取文章类型的详细信息"
            }
        },
        "/api/rattrap/ancient-article/article/{articleId}/detail": {
            "get": {
                "description": "获取文章的详细信息,根据文章ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取文章的详细信息"
            }
        },
        "/api/rattrap/ancient-article/article/{typeId}": {
            "get": {
                "description": "根据类型typeId，获取该类型文章的分页数据信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "根据类型获取文章的分页数据信息"
            }
        },
        "/api/rattrap/ancient-article/author/{authorId}/information": {
            "get": {
                "description": "获取Author信息列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Author信息列表"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
